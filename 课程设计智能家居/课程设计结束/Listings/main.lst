C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: E:\keil V5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Hardware\Key;.\System;.\Hardwar
                    -e\InfraRed;.\Hardware\Secret;.\Hardware\LCD1602;.\Hardware\DS18B20;.\Hardware\DS1302;.\Hardware\IIC;.\Hardware\PCF8591;.
                    -\Hardware\ULN2003) DEBUG OBJECTEXTEND PRINT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          //由于红外和独立、矩阵键盘都是用的P3（红外P3.2），所以当开锁后使用红外，然后关锁后，第一次输入密码会在后面
             -一点
   2          
   3          #include "Sys.h"
   4          int temp=0;//接收到的温度值，有正负，用于判断
   5          extern uchar password_original[5];//原密码
   6          extern uchar IRcord[4]; //储存解码后的4个字节数据，用户码，用户码，数据码，数据反码
   7          extern uchar IRdata[33];//包含起始码在内的33位数据
   8          extern uchar Lock;
   9          extern uchar chance;
  10          extern uint Beeptime;
  11          uchar choosemode=0;
  12          extern bit IRpro_ok;    //解码后4个字节数据接收完成标志位
  13          extern bit IRok;//33位数据接收完成标志位
  14          extern uchar TimeData[7];
  15          uchar readflag=0;//是否读取温度和时间
  16          extern uchar AD_Value;  //存储AD转换回的数字量
  17          extern unsigned char pwm_motor_val;//左右电机占空比值,越小快
  18          extern unsigned char pwm_t;//周期
  19          extern unsigned char datas[5];//温度值
  20          uchar LightControl=Machine;
  21          //等于Human：人为控制，LightHuman有效，LightMachine失效，等于Machine：智能控制，LightMachine失效，LightMac
             -hine有效
  22          uchar LightHuman=LightOff;
  23          uchar LightMachine=LightOff;
  24          
  25          uchar FanControl=Machine;
  26          //等于Human：人为控制，LightHuman有效，LightMachine失效，等于Machine：智能控制，LightMachine失效，LightMac
             -hine有效
  27          uchar FanHuman=FanOff;
  28          uchar FanMachine=FanOff;
  29          
  30          void choose(uchar i);
  31          //void openstring();
  32          void Timer1Init();
  33          sbit LED1= P1^0;   //读取AD的值是否成功（亮成功，灭失败）
  34          sbit LED2= P1^1;   //DAC成功输出（亮成功，灭失败）
  35          void main()
  36          {
  37   1        
  38   1        uchar i=0;
  39   1        Timer1Init();
  40   1        InitLcd1602();
  41   1        I2C_init();
  42   1      //  while(1)//测试光敏电阻和DA输出
  43   1      //  {
  44   1      //    
  45   1      //    if (ADC_Read(0x00)) LED1 = 0; else  LED1 = 1; 
  46   1      //    AD_Value=LightOff;
  47   1      //    if (DAC_OUT(AD_Value))  LED2 = 0; else  LED2 = 1;
  48   1      //    DisplayOneChar(0,0,AD_Value);
  49   1      //    Delayms(5);
  50   1      //  }
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 2   

  51   1      
  52   1      //  for(i=1;i<6;i++)//用于写第一次的密码到EEPROM
  53   1      //  {
  54   1      //    I2C_TransmitData(i,password_original[i-1]);
  55   1      //    Delayms(5);
  56   1      //  }
  57   1        
  58   1        Delayms(5);
  59   1        for(i=1;i<6;i++)
  60   1        {
  61   2          password_original[i-1]=I2C_ReceiveData(i);//从EEPROM读取密码，一次一位，一共5次
  62   2          Delayms(5);
  63   2        }
  64   1        init();//红外线定时器0和外部中断0初始化
  65   1        DUAN=0;
  66   1        WEI=0;
  67   1      
  68   1        Set_DS1302_Time(DS1302_W_ADDR); //先写入时钟日历寄存器起始地址再设置时钟日历初值
  69   1        while(1)
  70   1        {
  71   2          choose(choosemode);
  72   2        }
  73   1      }
  74          
  75          void choose(uchar i)
  76          {
  77   1        
  78   1        uchar Input=22;
  79   1        switch(i)
  80   1        {
  81   2          case 0://*******************************************************已关门，输入密码
  82   2            Lcd1602_Write_Cmd(0x01);//清除上一次所显示的模式的内容
  83   2            LcdShowStr(0,0,"Input secret.");
  84   2            while(1)
  85   2            {
  86   3              if(IRok)
  87   3              {
  88   4                IRcordpro();//根据脉宽解码出4个字节数据
  89   4                IRok=0;//清零脉宽检查完成标志位等待下一次脉宽检查
  90   4                if(IRpro_ok)//判断是否解码完成
  91   4                {
  92   5                  if(IRcord[2]==0x45)//开锁
  93   5                  {
  94   6                    Lock=LockOff;
  95   6                    choosemode=1;
  96   6                  }
  97   5                  else if(IRcord[2]==0x0c)//开灯
  98   5                  {
  99   6                    LightControl=Human;
 100   6                    LightHuman=LightOn;
 101   6                  }
 102   5                  else if(IRcord[2]==0x18)//关灯
 103   5                  {
 104   6                    LightControl=Human;
 105   6                    LightHuman=LightOff;
 106   6                  }
 107   5                  else if(IRcord[2]==0x5e)//智能灯
 108   5                  {
 109   6                    LightControl=Machine;
 110   6                    LightHuman=LightOff;
 111   6                  }
 112   5                  else if(IRcord[2]==0x08)//开风扇
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 3   

 113   5                  {
 114   6                    FanControl=Human;
 115   6                    FanHuman=FanOn;
 116   6                  }
 117   5                  else if(IRcord[2]==0x1c)//关风扇
 118   5                  {
 119   6                    FanControl=Human;
 120   6                    FanHuman=FanOff;
 121   6                  }
 122   5                  else if(IRcord[2]==0x5a)//智能风扇
 123   5                  {
 124   6                    FanControl=Machine;
 125   6                    FanHuman=FanOff;
 126   6                  }
 127   5                  IRpro_ok=0;//清零解码完成标志位
 128   5                }
 129   4              }
 130   3              if(LightControl==Human)
 131   3              {
 132   4                AD_Value=LightHuman;
 133   4              }
 134   3              else if(LightControl==Machine)
 135   3              {
 136   4                AD_Value=LightOff;
 137   4              }
 138   3              DAC_OUT(AD_Value);
 139   3              
 140   3              if(chance>0)
 141   3              {
 142   4                LcdShowStr(0,1,"Input:");
 143   4                DisplayOneChar(15,0,chance+'0');
 144   4                KeyAction();
 145   4              }
 146   3              else
 147   3              {
 148   4                LcdShowStr(0,0,"Only Inred open!");
 149   4                LcdShowStr(0,1,"      ");
 150   4                
 151   4                
 152   4                if(Beeptime==0)
 153   4                {
 154   5                  Beep=0;//蜂鸣器报警
 155   5                }
 156   4                if(Beep==0)
 157   4                {
 158   5                  Beeptime++;
 159   5                  if(Beeptime>100)
 160   5                    Beep=1;//蜂鸣器停止
 161   5                }
 162   4              }
 163   3              if(Lock==LockOff)
 164   3              {
 165   4                InitLcd1602();
 166   4                break;
 167   4              }
 168   3            }   
 169   2            break;
 170   2          case 1://**********************************************************已开门，显示温度时间
 171   2      //      Timer1Init();
 172   2      //    ET1=1;
 173   2      //    TR1=1;
 174   2            while(1)
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 4   

 175   2            {
 176   3              
 177   3              Input=22;
 178   3      //        openstring();
 179   3              Input=KeyScan();
 180   3              if(IRok)
 181   3              {
 182   4                IRcordpro();//根据脉宽解码出4个字节数据
 183   4                IRok=0;//清零脉宽检查完成标志位等待下一次脉宽检查
 184   4                if(IRpro_ok)//判断是否解码完成
 185   4                {
 186   5                  if(IRcord[2]==0x0c)
 187   5                  {
 188   6                    LightControl=Human;
 189   6                    LightHuman=LightOn;
 190   6                  }
 191   5                  else if(IRcord[2]==0x18)
 192   5                  {
 193   6                    LightControl=Human;
 194   6                    LightHuman=LightOff;
 195   6                  }
 196   5                  else if(IRcord[2]==0x5e)
 197   5                  {
 198   6                    LightControl=Machine;
 199   6                    LightHuman=LightOff;
 200   6                  }
 201   5                  else if(IRcord[2]==0x08)//开风扇
 202   5                  {
 203   6                    FanControl=Human;
 204   6                    FanHuman=FanOn;
 205   6                  }
 206   5                  else if(IRcord[2]==0x1c)//关风扇
 207   5                  {
 208   6                    FanControl=Human;
 209   6                    FanHuman=FanOff;
 210   6                  }
 211   5                  else if(IRcord[2]==0x5a)//智能灯
 212   5                  {
 213   6                    FanControl=Machine;
 214   6                    FanHuman=FanOff;
 215   6                  }
 216   5                  else if(IRcord[2]==0x47)
 217   5                  {
 218   6                    choosemode=0;
 219   6                    chance=3;
 220   6                    Lock=LockOn;
 221   6                    ET1=0;TR1=0;
 222   6                    LightControl=Machine;
 223   6                    AD_Value=LightOff;
 224   6                    break;
 225   6                  }
 226   5                  IRpro_ok=0;//清零解码完成标志位
 227   5                }
 228   4              }
 229   3              if(readflag==1)//达到1秒进行读取温度、日期和时间
 230   3              {
 231   4                readflag=0;
 232   4                //温度显示
 233   4                temp=getTmpValue();
 234   4                displayTemp(temp);
 235   4                sendChangeCmd();//温度转换，给下一次用
 236   4      //          DisplayOneChar(13,1,'*');
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 5   

 237   4                
 238   4                //时间显示
 239   4                Read_DS1302_Time(DS1302_R_ADDR); //先写入时钟日历寄存器起始地址再读出时钟日历写入到TimeData数组中
 240   4                DisplayOneStr (8,0,TimeData[6]); //年
 241   4                DisplayOneChar (10,0,'-');     //-
 242   4                DisplayOneStr (11,0,TimeData[4]); //月
 243   4                DisplayOneChar (13,0,'-');     //-
 244   4                DisplayOneStr (14,0,TimeData[3]);//日
 245   4                
 246   4                DisplayOneStr (0,1,TimeData[2]); //时
 247   4                DisplayOneChar (2,1,':');    //：
 248   4                DisplayOneStr (3,1,TimeData[1]); //分
 249   4                DisplayOneChar (5,1,':');    //：
 250   4                DisplayOneStr (6,1,TimeData[0]);//秒
 251   4                
 252   4      //          DisplayOneChar(10,1,'o');
 253   4              }
 254   3              if(Input==0)//开灯
 255   3              {
 256   4                LightControl=Human;
 257   4                LightHuman=LightOn;
 258   4              }
 259   3              else if(Input==1)//关灯
 260   3              {
 261   4                LightControl=Human;
 262   4                LightHuman=LightOff;
 263   4              }
 264   3              else if(Input==2)//智能灯
 265   3              {
 266   4                LightControl=Machine;
 267   4                LightHuman=LightOff;
 268   4              }
 269   3              else if(Input==4)//开风扇
 270   3              {
 271   4                FanControl=Human;
 272   4                FanHuman=FanOn;
 273   4              }
 274   3              else if(Input==5)//关风扇
 275   3              {
 276   4                FanControl=Human;
 277   4                FanHuman=FanOff;
 278   4              }
 279   3              else if(Input==6)//智能风扇
 280   3              {
 281   4                FanControl=Machine;
 282   4                FanHuman=FanOff;
 283   4              }
 284   3              
 285   3              if(LightControl==Human)
 286   3              {
 287   4                AD_Value=LightHuman;
 288   4              }
 289   3              else if(LightControl==Machine)
 290   3              {
 291   4                uchar Hour;
 292   4                ADC_Read(0x00);
 293   4                Hour=BCD_Chg_Dat(TimeData[2]);
 294   4                if(!(Hour>20&&Hour<23))
 295   4                {
 296   5                  AD_Value=LightOff;
 297   5                }
 298   4              }
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 6   

 299   3              DAC_OUT(AD_Value);
 300   3              if(Input==18)//修改密码
 301   3              {
 302   4                choosemode=2;
 303   4                Lcd1602_Write_Cmd(0x01);
 304   4      //          ET1=0;
 305   4      //          TR1=0;
 306   4                break;
 307   4              }
 308   3              
 309   3              else if(Input==19)//关锁（门）
 310   3              {
 311   4                choosemode=0;
 312   4                chance=3;
 313   4                Lock=LockOn;
 314   4      //          ET1=0;
 315   4      //          TR1=0;
 316   4                LightControl=Machine;
 317   4                FanControl=Machine;
 318   4                AD_Value=LightOff;
 319   4                _4IN=FanOff;
 320   4                break;
 321   4              }
 322   3              if(_4IN==FanOn)
 323   3              {
 324   4                DisplayOneChar(13,1,'*');
 325   4              }
 326   3              else if(_4IN==FanOff)
 327   3              {
 328   4                DisplayOneChar(13,1,' ');
 329   4              }
 330   3              if(AD_Value!=LightOff)
 331   3              {
 332   4                DisplayOneChar(10,1,'o');
 333   4              }
 334   3              else
 335   3              {
 336   4                DisplayOneChar(10,1,' ');
 337   4              }
 338   3            }
 339   2            break;
 340   2          case 2://**************************************************************修改密码
 341   2            Lcd1602_Write_Cmd(0x01);
 342   2            while(1)
 343   2            {
 344   3              uchar change=0;
 345   3              LcdShowStr(0,0,"Change secret.");
 346   3              LcdShowStr(0,1,"New secret:");
 347   3              change=changesecret();
 348   3              if(change==1)
 349   3              {
 350   4                
 351   4                break;
 352   4              }
 353   3            }
 354   2            break;
 355   2        }
 356   1      }
 357          /*
 358          void openstring()
 359          {
 360          //  LcdShowStr(0,0,"Open");
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 7   

 361            Delayms(1000); //温度转换时间需要750ms以上
 362            displayTemp(getTmpValue());
 363            sendChangeCmd();
 364            LcdShowStr(13,0,"Off");
 365          //  sendChangeCmd();
 366          //  Delayms(1000);
 367          //  displayTemp(getTmpValue);
 368            
 369          }
 370          */
 371          void Timer1Init()
 372          {
 373   1        EA=1;
 374   1        ET1=1;
 375   1        TMOD|=0x10;
 376   1        TH1=(65536-50000)/256;
 377   1        TL1=(65536-50000)%256;
 378   1        TR1=1;
 379   1      }
 380          
 381          void Timer1() interrupt 3
 382          {
 383   1        static timer1num=0;
 384   1      
 385   1        TH1=(65536-50000)/256;
 386   1        TL1=(65536-50000)%256;
 387   1        timer1num++;
 388   1        
 389   1      //  ET1=0;TR1=0;
 390   1        if(timer1num==20)
 391   1        {
 392   2          timer1num=0;
 393   2          readflag=1;
 394   2          /*
 395   2          //读取放在中断服务函数中会干扰定时器计时
 396   2          //温度显示
 397   2          displayTemp(getTmpValue());
 398   2          sendChangeCmd();
 399   2          DisplayOneChar(13,1,'*');
 400   2          
 401   2          //时间显示
 402   2          Read_DS1302_Time(DS1302_R_ADDR); //先写入时钟日历寄存器起始地址再读出时钟日历写入到TimeData数组中
 403   2          DisplayOneStr (8,0,TimeData[6]); //年
 404   2          DisplayOneChar (10,0,'-');     //-
 405   2          DisplayOneStr (11,0,TimeData[4]); //月
 406   2          DisplayOneChar (13,0,'-');     //-
 407   2          DisplayOneStr (14,0,TimeData[3]);//日
 408   2          
 409   2          DisplayOneStr (0,1,TimeData[2]); //时
 410   2          DisplayOneChar (2,1,':');    //：
 411   2          DisplayOneStr (3,1,TimeData[1]); //分
 412   2          DisplayOneChar (5,1,':');    //：
 413   2          DisplayOneStr (6,1,TimeData[0]);//秒
 414   2          
 415   2          DisplayOneChar(10,1,'o');
 416   2          */
 417   2        }
 418   1      //  ET1=1;TR1=1;
 419   1        
 420   1        pwm_t++;//风扇控制
 421   1        if(pwm_t == 255)
 422   1          FanMachine = FanOff;
C51 COMPILER V9.59.0.0   MAIN                                                              06/28/2019 08:52:55 PAGE 8   

 423   1        else if(pwm_t==pwm_motor_val)
 424   1          FanMachine = FanOn; 
 425   1      //  _4IN=FanMachine;
 426   1        if(choosemode==0)
 427   1        {
 428   2          _4IN = FanHuman;
 429   2        }
 430   1        if(choosemode==1||choosemode==2)
 431   1        {
 432   2          if(FanControl==Machine)
 433   2          {
 434   3            if(temp>0&&datas[1]>=3&&datas[2]>=1)
 435   3            {
 436   4              _4IN=FanMachine;
 437   4            }
 438   3            else
 439   3              _4IN=FanOff;
 440   3          }
 441   2      //    else if(FanControl==Human)
 442   2      //    {
 443   2      //      _4IN=FanHuman;
 444   2      //    }
 445   2      
 446   2        }
 447   1        
 448   1        if(FanControl==Human)
 449   1        {
 450   2          _4IN=FanHuman;
 451   2        }
 452   1      
 453   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1013    ----
   CONSTANT SIZE    =     72    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
